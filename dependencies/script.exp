#!/usr/bin/expect -f
#
# This Expect script was generated by autoexpect on Sat Aug 14 13:16:32 2021
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.
#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


set timeout 120
spawn python3 main.py
match_max 100000
expect -exact " *****************************************************\r
Welcome To Tata Play IPTV India Channel Playlist Generation Script\r
**********************************************************\r
- Using this script you can generate playable links based on the channels you have subscribed to \r
- You can always read the README.md file if you don't know how to use the generated file \r
- You can login using your password or generate an OTP. You need to enter both the Registered Mobile Number \r
\r
 Caution: This doesn't promote any kind of hacking or compromising anyone's details\r
Credits: Mobassar4u (My Github is: https://github.com/Mobassar4u/Tata-Play-IPTV-India)\r
====================================\r
 Login Status: false\r
====================================\r
Menu:\r
1. Login using Password\r
2. Login using OTP\r
3. Generate my playlist \r
4. Exit\r
*************************************************************\r
\r
\r
Enter your choice:"
send -- "1\r"
expect -exact "1\r
Enter your Registered Mobile Number without the country code: "
send -- "MOB_NO"
expect -exact "MOB_NO"
send -- "\r"
expect -exact "\r
Enter your Subscriber Id: "
send -- "SUB_ID"
expect -exact "SUB_ID"
send -- "\r"
expect -exact "\r
Enter your password: "
send -- "PASSWORD\r"
expect -exact "PASSWORD\r
Trying to Login with password ............\r
\r
 \r
\r
*************************************\r
Logged in successfully.\r
\r
\r
**********************************************\r
Saving user details to userDetails.json so that you don't have to login again\r
\r
\r
====================================\r
 Login Status: true\r
====================================\r
Menu:\r
1. Login Again Using Password\r
2. Login Again Using OTP\r
3. Generate my playlist \r
4. Exit\r
*************************************************************\r
\r
\r
Enter your choice:"
send -- "3\r"
expect "3\r
***********************\r
Please wait till the playlist is generated...\r
You may see a lot of lines being printed, you may ignore it\r
The generated m3u will be saved as TataPlayPlaylist.m3u under the code_samples directory\r
************************************\r
================================================================\r
Found total * channels subscribed by user \r
Saving them to m3u file\r
================================================================\r
\r
\r
====================================\r
 Login Status: true\r
====================================\r
Menu:\r
1. Login Again Using Password\r
2. Login Again Using OTP\r
3. Generate my playlist \r
4. Exit\r
*************************************************************\r
\r
\r
Enter your choice:"
send -- "4\r"
expect eof
